/************************* Main Page *************************/

body {
    margin: 0;
    height: auto;
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    background: white;
    font-family: 'Roboto', sans-serif;
}

/* Centered container */
.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    width: 100%;
    height: 100%;
}

/* Logo */
.logo {
    position: absolute;
    top: 15px;
    left: 70px;
    width: 150px;
    height: auto;
    background-size: contain;
    background-repeat: no-repeat;
    z-index: 30;
}

/* Sidebar Icon */
.menu-icon {
    position: absolute;
    top: 28px;
    left: 15px;
    width: 28px;
    height: auto;
    background-size: contain;
    background-repeat: no-repeat;
    cursor: pointer;
    z-index: 2;
    transition: filter 0.3s; /* Smooth transition for color change */
}
  
/* Side Navigation Bar */
.side-nav {
    height: 100%; /* Full height */
    width: 250px; /* Fixed width for the sidebar */
    position: fixed; /* Stay in place */
    top: 0;
    left: -250px; /* Start hidden to the left */
    background-color: #111; /* Black background */
    overflow-y: auto; /* Enable vertical scrolling if needed */
    transition: transform 0.5s ease; /* Smooth transition for the sidebar */
    padding-top: 70px; /* Start a little below the top */
}

.side-nav.open {
    transform: translateX(250px); /* Move into view */
}

/* Sidebar Titles */  
.side-nav h2 {
    color: white;
    margin-left: 20px;
    font-size: 24px;
    margin-bottom: 10px;
}

/* Sidebar Content */
.side-nav a {
    padding: 10px 45px;
    text-decoration: none;
    font-size: 21px;
    color: #a3a1a1;
    display: block;
    transition: 0.3s;
}

.side-nav a:hover {
    color: #f1f1f1;
}

.mode-icon {
    position: absolute;
    top: 18px;
    right: 45px;
    width: 38px;
    height: auto;
    cursor: pointer;
    z-index: 2;
}


/******************* Main Contents ********************/

.main-content {
    display: flex;
    flex-direction: column;
    align-items: center; /* Center the content by default */
    width: 100%;
    padding: 20px;
    margin-top: 40px;
    transition: align-items 0.5s ease; /* Smooth transition for alignment */
}

.main-content.left-align {
    align-items: flex-start; /* Left align when sidebar is open */
}

/* Center the title by default */
#list-title {
    font-size: 36px;
    font-weight: bold;
    color: #333;
    margin-top: 20px;
    margin-bottom: 30px;
    text-align: center; /* Center the text */
    width: 63vw; /* Match the width of the box */
    border: none; /* No border */
    outline: none; /* No outline on focus */
    transition: text-align 0.5s ease, margin-left 0.5s ease; /* Smooth transition */
}

#list-title:focus {
    border-bottom: 1px solid #111; /* Optional: underline on focus */
}

/* Center the box by default */
.box {
    width: 63vw; /* Adjust width as needed */
    min-height: 400px;
    padding-top: 15px;
    padding-bottom: 15px;
    padding-left: 70px;
    padding-right: 70px;
    background-color: white;
    border-radius: 30px;
    box-shadow: 30px 40px 30px rgba(0, 0, 0, 0.2);
    position: relative;
    transition: margin-left 0.5s ease; /* Smooth transition */
}

.box::before {
    content: '';
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
    border-radius: 40px;
    background: linear-gradient(to right, #0279c9, #372991, #372991, #8e02ac);
    z-index: -1;
}

/* Left-align title when the sidebar is open */
.main-content.left-align #list-title  {
    text-align: left; /* Left-align the text */
    margin-left: calc(250px + 65px); /* Align title with the box */
}

/* Left-align the box when the sidebar is open */
.main-content.left-align .box {
    margin-left: calc(250px + 65px);; /* Left-align the box with the side nav bar*/
}


.input-container {
    position: absolute;
    display: flex;
    align-items: center;
    bottom: 30px;
    width: 63vw;
}

#newTaskInput {
    width: 63vw; /* Adjust as needed */
    padding: 22px;
    border: 1.5px solid #979797;
    outline: none;
    background: #e7e7e7;
    font-size: 17px;
    border-radius: 25px;
    margin-right: 10px; /* Space between input and button */
}

#addButton {
    padding: 14px;
    padding-left: 24px;
    padding-right: 24px;
    border: none;
    border-radius: 20px !important;
    background: linear-gradient(to bottom right, #0279c9, #372991, #8e02ac);;
    color: white;
    border-radius: 15px;
    cursor: pointer;
    font-size: 33px;
    transition: filter 0.2s ease; /* Smooth transition for hover effect */
}

#addButton:hover {
    filter: brightness(1.3); /* Lighter shade on hover */
}

#taskList {
    list-style: none; /* Remove default list styling */
    padding: 0; /* Remove default padding */
}

#taskList li {
    display: flex;
    align-items: center; /* Center circle and text vertically */
    padding: 21px 10px; /* Vertical padding for each item */
    border-bottom: 1px solid #ccc; /* Thin horizontal line */
    font-size: 18px;
    position: relative; /* For positioning if needed */
    transition: background-color 0.3s ease; /* Smooth background color transition */
}

#taskList li:hover {
    background-color: rgb(237, 237, 237);
}

#taskList li:last-child {
    border-bottom: none; /* Remove the bottom border from the last list item */
    margin-bottom: 105px; /* Leave space for input box */
}

.circle {
    width: 21px;
    height: 21px;
    border-radius: 50%; /* Make it circular */
    margin-right: 18px; /* Space between circle and text */
    cursor: pointer;
    position: relative;
    background: linear-gradient(to bottom right, #0279c9, #8e02ac); /* Gradient fill */
    transition: filter 0.3s ease;
}

.circle::before {
    content: '';
    position: absolute;
    top: 50%; /* Center vertically */
    left: 50%; /* Center horizontally */
    width: 17.5px; /* Inner circle width */
    height: 17.5px; /* Inner circle height */
    border-radius: 50%; /* Keep it circular */
    background: white;
    transform: translate(-50%, -50%);
    transition: background 0.2s ease;
}

.circle:hover {
    filter: brightness(1.3); /* Lighter shade on hover */
}

/* Completed state for circle and list item */
.completed .circle::before {
    background: transparent; /* Remove the inner circle fill */
}

/* Completed list item text */
.completed {
    color: #a3a1a1; /* Gray out the text */
    position: relative;
    padding-left: 30px; /* Space for the circle */
    transition: color 0.3s ease; /* Smooth color transition */
}

/* Strike-through effect, only under the text */
.completed .task-text {
    position: relative;
    color: #a3a1a1;     /* Gray out the text */
}

.task-text {
    position: relative;
    padding-left: 0px;
    transition: color 0.3s ease;
}

.task-text::before {
    content: '';
    position: absolute;
    bottom: 50%;
    left: 0;
    width: 0;
    height: 1.5px;
    background-color: #a3a1a1; /* Strike-through color */
    transition: width 0.5s ease;
}

.completed .task-text::before {
    width: 100%;
}

.delete-button {
    padding: 6px;
    margin-left: auto; /* Push the delete button to the right */
    width: 15px; /* Adjust size as needed */
    height: auto;
    cursor: pointer;
    transition: all 0.3s ease; /* Smooth transition for hover effect */
}

.delete-button:hover {
    border-radius: 50%;
    background-color: rgba(255, 0, 0, 0.865);
}

.add-list {
    width: 16px; /* Adjust size as needed */
    height: auto;
    cursor: pointer;
    margin-left: 80px; /* Push it to the right */
    display: inline-block; /* Ensure it behaves like a block for proper spacing */
    filter: invert(1);
    transition: all 0.25s ease; /* Smooth transition for hover effect */
}

.add-list:hover {
    scale: 1.3; /* Slightly darker on hover */
    transform: rotate(180deg);
}

.task-input {
    border: none; /* No border */
    background: transparent; /* Transparent background */
    font-size: 18px; /* Match font size */
    flex-grow: 1; /* Take available space */
    margin-left: 10px; /* Space between circle and input */
    margin-right: 20px;
    outline: none; /* No outline on focus */
}

.task-input:focus {
    border-bottom: 1px solid #0279c9; /* Optional: underline on focus */
}

/* Strike-through effect for completed input tasks */
.completed .task-input {
    text-decoration: line-through; /* Apply the strike-through effect */
    color: #a3a1a1; /* Gray out the text */
}


@keyframes fall {
    0% {
        transform: translateY(0);
        opacity: 1;
    }
    100% {
        transform: translateY(110vh); /* End point */
        opacity: .2;
    }
}

.confetti {
    position: fixed;
    width: 10px;
    height: 10px;
    background-color: #FF5733; /* Change to desired colors */
    opacity: 1;
    pointer-events: none;
    z-index: 9999; /* Ensure it appears above other elements */
    animation: fall 2s cubic-bezier(.7, 0.1, .5, 1) forwards; /* Smooth acceleration */
    /* Randomize size, colors, and starting positions */
    left: calc(50% - 5px); /* Center initially */
    animation-duration: 2s; /* Adjust duration for a longer fall */
}

/* Randomize the size */
.confetti-small {
    width: 6px;
    height: 6px;
    background-color: #FFC300;
}

.confetti-large {
    width: 12px;
    height: 12px;
    background-color: #DAF7A6;
}




